<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<h:form xmlns="http://www.w3.org/1999/xhtml"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:p="http://primefaces.org/ui"
        prependId="false"
        xmlns:f="http://xmlns.jcp.org/jsf/core">
    <h:panelGrid id="gameview" columns="1">
        <h:panelGroup id="controllpanel" rendered="#{player.signIn}">
            <p:growl id="announcement" keepAlive="true" for="announcement" life="3000">
                <p:autoUpdate />
            </p:growl>
            #{game.initGuide()}
            <p:messages id="guide" for="guide"  showDetail="true"/>

            <p:commandButton id="end-action" value="#{msg.goBack}"
                             rendered="#{game.underOperation}"
                             onclick="finishOperation()"
                             process="@this" update="controllpanel"
                             actionListener="#{game.finishesOperation}"
                             style="width: 100%"/>
            
            <p:toolbar id="toolbar">
                <f:facet name="left">
                    <p:selectBooleanButton onLabel="" offLabel="" styleClass="railCreation toolbarButton"/>
                    <p:selectBooleanButton onLabel="" offLabel="" styleClass="stationCreation toolbarButton"/>
                    <p:selectBooleanButton onLabel="" offLabel="" styleClass="trainCreation toolbarButton"/>
                    <p:selectBooleanButton onLabel="" offLabel="" styleClass="deletion toolbarButton"/>
                    <p:selectBooleanButton onLabel="" offLabel="" styleClass="zoomin toolbarButton"/>
                    <p:selectBooleanButton onLabel="" offLabel="" styleClass="zoomout toolbarButton"/>
                    <p:selectBooleanButton onLabel="" offLabel=""  styleClass="toolbarButton"/>
                </f:facet>
            </p:toolbar>

            <!-- 画面クリック操作用 -->
            <!-- ここでリスナを呼んでも、Dialog Framworkは使えない -->
            <!-- immediateを入れないとDialogがでない -->
            <p:remoteCommand name="registerClickPos"
                             immediate="true"
                             actionListener="#{game.registerClickPos}"
                             oncomplete="fireClickMenu()"/>
            <p:remoteCommand name="registerEdgeId"
                             immediate="true"
                             actionListener="#{game.registerEdgeId}"
                             oncomplete="fireClickMenu()"/>
            <!-- remoteCommandの以下にajaxタグがおけないため、隠しコマンドを用意する -->
            <p:commandButton id="openclickmenu" process="@this" 
                             actionListener="#{game.openClickMenu}" style="display:none">
                <p:ajax event="dialogReturn" update="controllpanel" listener="#{game.handleReturn}"/>
            </p:commandButton>
            <!-- immediateがないと画面が更新されてしまってエラーになる -->
            <p:remoteCommand name="extendRail" immediate="true" update="gamemodel" actionListener="#{game.extendRail}"/>
        </h:panelGroup>
        <h:panelGroup rendered="#{!player.signIn}">
            <p:remoteCommand name="registerClickPos" />
        </h:panelGroup>

        <h:inputHidden id="clickX" value="#{game.clickX}"/>
        <h:inputHidden id="clickY" value="#{game.clickY}"/> 

        <p:ajaxStatus>
            <f:facet name="start">
                <h:graphicImage id="ajaxstatus" value="resources/image/loading.gif"/>
            </f:facet>
        </p:ajaxStatus>

        <p:confirmDialog header="#{msg.confirmation}" message="#{msg.confirmationMessage}" widgetVar="confirmDialog">
            <p:commandButton id="confirmOK" value="#{msg.remove}" type="button" style="ui-icon-check" icon="fa fa-check" 
                             oncomplete="PF('confirmDialog').hide()" accesskey="y">
                <p:ajax event="click" update="gamemodel" oncomplete="handleCompleteRemoving()" listener="#{game.remove()}"/>
            </p:commandButton>
            <p:commandButton value="#{msg.cancel}" type="button" onclick="PF('confirmDialog').hide()"  accesskey="n"/>
        </p:confirmDialog>

        <!-- 画面スクロール用 -->
        <p:ajax event="mouseup" update="gamemodel" oncomplete="fetchGraphics()"/>
        <h:inputHidden id="centerX" value="#{game.centerX}"/>
        <h:inputHidden id="centerY" value="#{game.centerY}"/>
    </h:panelGrid>
    <h:panelGroup id="gamemodel">
        <ui:repeat var="pi" value="#{game.players}">
            <div class="player" id="player#{pi.player.id}"
                 data-name="#{pi.name}" data-icon="#{pi.iconUrl}"
                 data-color="#{pi.color}" data-isin="#{game.isIconIn(pi.player)}" 
                 data-x="#{game.getIconPos(pi.player).x}" data-y="#{game.getIconPos(pi.player).y}"/>
        </ui:repeat>
        <ui:repeat var="c" value="#{game.companies}">
            <div class="company" id="company#{c.id}"
                 data-x="#{c.x}" data-y="#{c.y}"
                 data-scale="#{c.scale}"/>
        </ui:repeat>

        <ui:repeat var="r" value="#{game.residences}">
            <div class="residence" id="residence#{r.id}"
                 data-x="#{r.x}" data-y="#{r.y}"
                 data-interval="#{r.interval}" data-capacity="#{r.capacity}"/>
        </ui:repeat>

        <ui:repeat var="n" value="#{game.myRailNodes}">
            <div class="railnode" id ="railnode#{n.id}"
                 data-x="#{n.x}" data-y="#{n.y}"/>
        </ui:repeat>

        <ui:repeat var="ln" value="#{game.myLonelyRailNodes}">
            <div class="lonelyrailnode" id ="lonelyrailnode#{ln.id}"
                 data-x="#{ln.x}" data-y="#{ln.y}"/>
        </ui:repeat>

        <ui:repeat var="e" value="#{game.railEdges}">
            <div class="railedge" id="railedge#{e.id}"
                 data-reverseid="railedge#{game.getReverseEdge(e).id}"
                 data-owner-name="#{e.owner.info.name}"  
                 data-from-x="#{e.from.x}" data-from-y="#{e.from.y}"
                 data-to-x="#{e.to.x}" data-to-y="#{e.to.y}"
                 data-pid="player#{e.owner.id}" data-ismine="#{game.player.id == e.owner.id}"
                 />

        </ui:repeat>

        <ui:repeat var="st" value="#{game.stations}">
            <div class="station" id="st#{st.id}"
                 data-owner-name="#{st.owner.info.name}"  
                 data-x="#{st.platform.railNode.x}" data-y="#{st.platform.railNode.y}"
                 data-name="#{st.name}" data-gatenum="#{st.ticketGate.gateNum}" 
                 data-capacity="#{st.platform.capacity}" data-pid="p#{st.owner.id}"/>
        </ui:repeat>

        <ui:repeat var="l" value="#{game.lines}">
            <div class="line" id="l#{l.id}"
                 data-owner-name="#{l.owner.info.name}"
                 data-line-name="#{l.name}">
                <ui:repeat var="lstep" value="#{game.getSortedLineSteps(l)}" varStatus="status">
                    <div class="linestep" id="ls#{lstep.id}"
                         data-from-x="#{lstep.startRailNode.x}" data-from-y="#{lstep.startRailNode.y}"
                         data-to-x="#{lstep.goalRailNode.x}" data-to-y="#{lstep.goalRailNode.y}"
                         data-type="#{lstep.type}" data-idx="#{status.index + 1}"
                         data-pid="player#{l.owner.id}"  data-ismine="#{game.player.id == l.owner.id}"/>
                </ui:repeat>
            </div>
        </ui:repeat>

        <ui:repeat var="s" value="#{game.stepForHuman}">
            <div class="stepforhuman" id="s#{s.uid}"
                 data-from-x="#{s.from.x}" data-from-y="#{s.from.y}"
                 data-to-x="#{s.to.x}" data-to-y="#{s.to.y}"
                 data-cost="#{s.cost}"/>
        </ui:repeat>
    </h:panelGroup>
    
    <h:panelGroup id="gamemovablemodel">
        <p:poll interval="1" update="gamemovablemodel" oncomplete="fetchMovableGraphics()"/>
        <ui:repeat var="t" value="#{game.trains}">
            <div class="train" id="train#{t.id}"
                 data-x="#{t.x}" data-y="#{t.y}"/>
        </ui:repeat>
        <ui:repeat var="h" value="#{game.humans}">
            <div class="human" id="human#{h.id}"
                 data-x="#{h.x}" data-y="#{h.y}"/>
        </ui:repeat>
    </h:panelGroup>
    
    <!-- 拡大縮小用 -->
    <h:panelGrid columns="1" class="zoombar">
        <h:outputText  id="scale" value="#{game.scale}"/>
        <h:inputHidden id="sliderscale" value="#{game.scale * 100}"/>
        <p:slider for="sliderscale" minValue="100" maxValue="1600" 
                  onSlide="handleSlide(event, ui)" widgetVar="slider">
            <p:ajax event="slideEnd" listener="#{game.onSlideEnd}" 
                    update="gamemodel scale"
                    oncomplete="fetchGraphics()"/>
        </p:slider>
        <!-- マウスホイール起点のscale変更をサーバに送信. slideEndは発火しない -->
        <p:remoteCommand name="registerScale" immediate="true" actionListener="#{game.registerScale}" />
    </h:panelGrid>
</h:form>

